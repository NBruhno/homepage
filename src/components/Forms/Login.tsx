import { useAuth } from 'states/users'

import { Title, Subtitle } from 'containers/login'

import { ButtonSolid, ButtonBorder } from 'components/Buttons'

import { Input } from './Fields/Input'

import { Form } from '.'

export type LoginModel = {
	email: string,
	password: string,
}

export type RegisterModel = {
	accessCode: string,
	email: string,
	username: string,
	password: string,
}

export type TwoFactorModel = {
	otp: string,
}

export const FormLogin = () => {
	const { login, register, verify2fa, logout, currentFlow, setCurrentFlow } = useAuth()

	switch (currentFlow) {
		case 'login': return (
			<>
				<Title>Welcome back</Title>
				<Form name={currentFlow} onSubmit={async (fields: LoginModel) => { await login(fields) }}>
					<Input label='Email' name='email' type='email' id={`${currentFlow}-email`} isRequired autoComplete='email' />
					<Input label='Password' name='password' type='password' id={`${currentFlow}-password`} isRequired autoComplete='password' />
					<div css={(theme) => ({
						display: 'flex',
						justifyContent: 'space-between',

						[theme.mediaQueries.maxMobile]: {
							flexDirection: 'column-reverse',
						},
					})}
					>
						<ButtonBorder label='Sign up instead' onClick={() => setCurrentFlow('register')} />
						<ButtonSolid
							label='Login'
							type='submit'
							css={(theme) => ({
								[theme.mediaQueries.maxMobile]: {
									width: '100%',
									marginBottom: '12px',
								},
							})}
						/>
					</div>
				</Form>
			</>
		)
		case 'register': return (
			<>
				<Title>Sign up</Title>
				<Form name={currentFlow} onSubmit={async (fields: RegisterModel) => { await register(fields) }}>
					<Input label='Access code' name='accessCode' type='text' id={`${currentFlow}-accessCode`} isRequired />
					<Input label='Email' name='email' type='email' id={`${currentFlow}-email`} isRequired autoComplete='email' />
					<Input label='Display name' name='username' type='username' id={`${currentFlow}-username`} isRequired autoComplete='username' />
					<Input label='Password' name='password' type='password' id={`${currentFlow}-password`} isRequired autoComplete='password' />
					<div css={(theme) => ({
						display: 'flex',
						justifyContent: 'space-between',

						[theme.mediaQueries.maxMobile]: {
							flexDirection: 'column-reverse',
						},
					})}
					>
						<ButtonBorder label='Go back' onClick={() => setCurrentFlow('login')} />
						<ButtonSolid
							label='Sign up'
							type='submit'
							css={(theme) => ({
								[theme.mediaQueries.maxMobile]: {
									width: '100%',
									marginBottom: '12px',
								},
							})}
						/>
					</div>
				</Form>
			</>
		)
		case '2fa': return (
			<>
				<Title>Two-Factor Authentication</Title>
				<Subtitle>Submit your code generated by your authenticator</Subtitle>
				<Form name={currentFlow} onSubmit={async (fields: TwoFactorModel) => { await verify2fa(fields) }}>
					<Input label='One time password' name='otp' id={`${currentFlow}-otp`} isRequired autoComplete='otp' />
					<ButtonSolid label='Verify code' type='submit' isFullWidth />
				</Form>
			</>
		)
		case 'loggedIn': return (
			<div>
				<Title>You are already logged in</Title>
				<Subtitle />
				<ButtonSolid label='Logout' onClick={async () => { await logout() }} isFullWidth />
			</div>
		)
		default: return null
	}
}
