import { ButtonSolid, ButtonBorder } from 'components/Buttons'
import { Title, Subtitle } from 'components/Pages/Login'

import { useAuth } from 'reducers/auth'

import { Input } from './Fields/Input'
import { Form } from '.'

export const FormLogin = () => {
	const { user, login, register, userInfo, check, verify2fa, logout, setUserInfo } = useAuth()

	if (user.accessToken) {
		return (
			<div>
				<Title>You are already logged in</Title>
				<Subtitle />
				<ButtonSolid label='Logout' onClick={async () => { await logout() }} fullWidth />
			</div>
		)
	}

	if (user.intermediateToken) {
		const formName = 'register'
		return (
			<>
				<Title>Two-Factor Authentication</Title>
				<Subtitle>Submit your code generated by your authenticator</Subtitle>
				<Form form={formName} onSubmit={async (fields) => { await verify2fa(fields) }}>
					<Input label='One time password' name='otp' id={`${formName}-otp`} required autoComplete='otp' />
					<ButtonSolid label='Verify code' submit fullWidth />
				</Form>
			</>
		)
	}

	if (userInfo === null) {
		const formName = 'check'
		return (
			<>
				<Title>Sign in</Title>
				<Subtitle>Lets see if you already have a user here</Subtitle>
				<Form form={formName} onSubmit={async ({ email }) => { await check({ email }) }}>
					<Input label='Email' name='email' type='email' id={`${formName}-email`} required autoComplete='email' />
					<ButtonSolid label='Next' submit fullWidth />
				</Form>
			</>
		)
	}

	if (userInfo?.exists) {
		const formName = 'login'
		return (
			<>
				<Title>Welcome back</Title>
				<Form form={formName} onSubmit={async (fields) => { await login(fields) }} initialValues={{ email: userInfo.email }}>
					<Input label='Email' name='email' type='email' id={`${formName}-email`} required autoComplete='email' />
					<Input label='Password' name='password' type='password' id={`${formName}-password`} required autoComplete='password' />
					<ButtonSolid label='Sign in' submit fullWidth />
				</Form>
			</>
		)
	}

	if (!userInfo?.exists && userInfo?.email) {
		const formName = 'register'
		return (
			<>
				<Title>User not found</Title>
				<Subtitle>Want to sign up instead?</Subtitle>
				<Form form={formName} onSubmit={async (fields) => { await register(fields) }} initialValues={{ email: userInfo.email }}>
					<Input label='Email' name='email' type='email' id={`${formName}-email`} required autoComplete='email' />
					<Input label='Display name' name='displayName' id={`${formName}-displayName`} required autoComplete='username' />
					<Input label='Password' name='password' type='password' id={`${formName}-password`} required autoComplete='password' />
					<div css={{ display: 'flex', justifyContent: 'space-between' }}>
						<ButtonBorder label='No, go back' onClick={() => setUserInfo(null)} />
						<ButtonSolid label='Sign up' submit />
					</div>
				</Form>
			</>
		)
	}

	return null
}
