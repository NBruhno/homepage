import { ButtonSolid } from 'components/Buttons'
import { Input } from './Fields/Input'

import { useAuth } from 'reducers/auth'

import { Form } from '.'

export const LoginForm = () => {
	const { user, login, register, userInfo, check, verify2fa, logout } = useAuth()

	if (user.accessToken) {
		return (
			<div>
				<p>You are already logged in</p>
				<ButtonSolid label='Logout' onClick={() => logout()} />
			</div>
		)
	}

	if (user.intermediateToken) {
		const formName = 'register'
		return (
			<Form form={formName} onSubmit={async (fields) => verify2fa(fields)}>
				<Input label='One time password' hint='Generated by your authenticator app' name='otp' id={`${formName}-otp`} required />
				<ButtonSolid label='Submit' submit />
			</Form>
		)
	}

	if (userInfo === null) {
		const formName = 'check'
		return (
			<Form form={formName} onSubmit={async ({ email }) => check({ email })}>
				<Input label='Email' name='email' type='email' id={`${formName}-email`} required />
				<ButtonSolid label='Submit' submit />
			</Form>
		)
	}

	if (userInfo?.exists) {
		const formName = 'login'
		return (
			<Form form={formName} onSubmit={async (fields) => login(fields)}>
				<Input label='Email' name='email' type='email' id={`${formName}-email`} required />
				<Input label='Password' name='password' type='password' id={`${formName}-password`} required />
				<ButtonSolid label='Submit' submit />
			</Form>
		)
	}

	if (!userInfo?.exists && userInfo?.email) {
		const formName = 'register'
		return (
			<Form form={formName} onSubmit={async (fields) => register(fields)}>
				<Input label='Email' name='email' type='email' id={`${formName}-email`} required />
				<Input label='Password' name='password' type='password' id={`${formName}-password`} required />
				<ButtonSolid label='Submit' submit />
			</Form>
		)
	}

	return null
}
