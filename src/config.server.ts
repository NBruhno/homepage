import type { Environment } from 'types/Environment'

import { decryptConfig } from 'lib/cipher'

const authPublicKey = 'qT39COgi6m/yts8+5J77wmtq2jvigEJQ9OUfYNvWnfNe1gRTIuYuA2w8NQPw0LwiUfrObyBQPoM4ePWNUxmt/vEh62YHYBc1jCLvT1oaN4YK332rHO16c+dLTt03kmog8A/cQYhNAr0hyOEDQObbwFaoCbzj6iQUat7anAFKnPNCHVqwwqagKuddRCjwnmc1dSg7kR2YzlmqAA9WMD77VkLMj8MCl7tfuvKVqhdSYv0UsLuJAlcWRSSj/HUrdWw3hudNRmIHZhewAZDwcF0VuUuZ+uLBa2YuMdXDw7+fJbL/dvxaAooTG4FBlAjHuL4xGPQjmyR4R1SScl5/FypWm2avf47efFxYneoMqubgz0sRXlrmyodh6qxtacjnyewHEt8aBCbZDaRk6mfQSWcAWfx4UtN024zaXPiFc9wL1/V87iIZi0sJY/HV8a3dzqOhpBwQPd6CjCxEH+OY3Ffk/LzxHA1lxyVVKoWiHe887EnmtNeLuiWaSXV+VVBMAo4vqTcp32xZVzGhg/eVtYBou20w+OsPmjiwq8lHy/oF44AzERC9NBZ+h5jTYHotCc3+LCJnG8ZuYk7htym4AmlY+Cfw9EFpLI2k620A47GHdKaamt1kNUqLSAdSzh2gn4u2yxBHAFIJgVE06nhGKIm/COwoMrr9do387BUvYvlRiobBcSVPsMhi3CieixfkvnqtHEr8p8aEV7Jybv2Ijwu8oP6sIYWZ56dtZU3Il56AEVH5GWeoKngdLnwouDEfHEWwrHE7pnZJJkRNbWWFmaHRtmJF3Ba8v8QB3bohTIvkyqOvdnbwYFHEOEz0UpdEbDHmUpg2fBqffN4yI804JgGQJ2tcV00dVdbBS6AaDYpJNSL+LqwSaE99rwuKBdJ6mZ659PkBbIzh3pUlCm1TgHzUD9MkDoxhNYVdxTPWZQ1Pf7qlhEEAkScLQBPzkcUn90ivUrMFrg2ohTLDsb6AVRO3OhTq5gaHmumrZEGK/IIiogQQ8nEyM23c4b9915CpeG/RSo6FgPyft3VXWe41TzZNDdxlUEOeuqYMSbOB5BlE4MDaBvW59/MWeq49JKfM29jg'
const authPrivateKey = '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'

export const config = Object.freeze({
	auth: {
		accessCode: process.env.ACCESS_CODE as string,
		iv: process.env.AUTH_IV as string,
		privateKey: decryptConfig(authPrivateKey),
		publicKey: decryptConfig(authPublicKey),
		secret: process.env.AUTH_SECRET as string,
		systemToken: process.env.AUTH_SYSTEM_TOKEN as string,
	},

	fauna: {
		secret: process.env.FAUNADB_SECRET as string,
	},

	igdb: {
		clientId: process.env.IGDB_CLIENT_ID as string,
		token: process.env.IGDB_TOKEN as string,
	},

	itad: {
		apiKey: process.env.ITAD_TOKEN as string,
	},

	environment: process.env.NODE_ENV === 'test' ? 'development' : process.env.NODE_ENV as Environment,
} as const)
